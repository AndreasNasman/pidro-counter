{"version":3,"sources":["components/scoreboard/Scoreboard.module.css","components/keypad/button/Button.module.css","components/toolbar/Toolbar.module.css","components/keypad/Keypad.module.css","components/app/App.module.css","serviceWorker.ts","components/common/constants.ts","components/app/logic.ts","components/app/reducer.ts","components/keypad/constants.ts","components/keypad/reducer.ts","components/keypad/button/Button.tsx","components/keypad/Keypad.tsx","components/scoreboard/body/Body.tsx","components/scoreboard/foot/Foot.tsx","components/scoreboard/head/Head.tsx","components/scoreboard/Scoreboard.tsx","components/toolbar/Toolbar.tsx","index.tsx","components/app/App.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","TEAMS","checkRedoPossibility","history","historyIndex","length","checkUndoPossibility","initialGame","rounds","score","they","us","initialState","canRedo","canUndo","game","phase","reducer","state","action","type","bid","dropRight","last","result","step","Error","TIMEOUT","parseFloat","buttonStyles","duration","NUMBERS","range","MAXIMUM_POINTS","activeNumber","activeTeam","disableButtons","number","team","Button","active","activeColor","disabled","handleClick","value","className","classNames","styles","button","onClick","Keypad","updateRound","useReducer","dispatch","update","points","setTimeout","handleTeamClick","handleNumberClick","container","map","black","key","red","Body","bodyColumnRef","useRef","useEffect","current","scrollIntoView","behavior","block","body","column","ref","round","index","cell","reverse","content","aria-label","emoji","role","Foot","footCellRef","footRef","foot","Head","headRef","useState","leader","setLeader","head","Scoreboard","minHeight","setMinHeight","currentHeadRef","currentFootRef","currentFootCellRef","newMinHeight","offsetHeight","table","style","Toolbar","redo","undo","iconWrapper","rootElement","document","getElementById","ReactDOM","render","felt","grid","winner","lastRound","determineResult","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd78007a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blackBoard\":\"#282828\",\"chalkWhite\":\"#fefeff\",\"body\":\"Scoreboard_body__3zfKJ\",\"cell\":\"Scoreboard_cell__3ySS7\",\"foot\":\"Scoreboard_foot__1_iyE\",\"head\":\"Scoreboard_head__2GDNu\",\"table\":\"Scoreboard_table__1ccUY\",\"reverse\":\"Scoreboard_reverse__2CUIQ\",\"column\":\"Scoreboard_column__1vt1y\",\"content\":\"Scoreboard_content__166Op\",\"emoji\":\"Scoreboard_emoji__326X1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playingCardBlack\":\"#000\",\"playingCardRed\":\"#ff534f\",\"playingCardWhite\":\"#fff\",\"duration\":\"0.3s\",\"button\":\"Button_button__2xxUv\",\"black\":\"Button_black__299D5\",\"red\":\"Button_red__eABqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chalkWhite\":\"#fefeff\",\"container\":\"Toolbar_container___LzHb\",\"iconWrapper\":\"Toolbar_iconWrapper__6mJ3y\",\"disabled\":\"Toolbar_disabled__3zohK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGap\":\"0.1rem\",\"container\":\"Keypad_container__1L2sv\",\"number\":\"Keypad_number__1V1sq\",\"team\":\"Keypad_team__1zdyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feltGreen\":\"#006e3b\",\"spacing\":\"1rem\",\"felt\":\"App_felt__OzMyW\",\"grid\":\"App_grid__AtUjj\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Team } from \"./types\";\n\nexport const MAXIMUM_POINTS = 14;\nexport const MINIMUM_POINTS = 6;\nexport const TEAMS: Team[] = [\"us\", \"they\"];\n","import { Bid, Score, Winner } from \"components/common/types\";\nimport { History, Phase } from \"./types\";\nimport { MAXIMUM_POINTS } from \"components/common/constants\";\n\nexport const changePhase = (phase: Phase): Phase =>\n  phase === \"bid\" ? \"result\" : \"bid\";\n\nexport const checkRedoPossibility = (\n  history: History,\n  historyIndex: number\n): boolean => {\n  const offset = 1;\n  const threshold = history.length - offset;\n  return historyIndex < threshold;\n};\n\nexport const checkUndoPossibility = (historyIndex: number): boolean => {\n  const threshold = 0;\n  return historyIndex > threshold;\n};\n\nexport const determineResult = (bid: Bid, winner: Winner): Score => {\n  const result = {\n    [winner.team]: winner.points,\n    [winner.team === \"us\" ? \"they\" : \"us\"]: MAXIMUM_POINTS - winner.points\n  };\n\n  if (result[bid.team] < bid.points) {\n    result[bid.team] = -bid.points;\n  }\n\n  return { they: result.they, us: result.us };\n};\n\nexport const incrementScore = (score: Score, result: Score): Score => ({\n  they: score.they + result.they,\n  us: score.us + result.us\n});\n","import { Bid, Game, Score } from \"components/common/types\";\nimport { History, Phase } from \"./types\";\nimport {\n  changePhase,\n  checkRedoPossibility,\n  checkUndoPossibility,\n  incrementScore\n} from \"./logic\";\nimport { dropRight, last } from \"lodash\";\n\ninterface State {\n  canRedo: boolean;\n  canUndo: boolean;\n  game: Game;\n  history: History;\n  historyIndex: number;\n  phase: Phase;\n}\n\ntype Action =\n  | { bid: Bid; type: \"ADD_BID\" }\n  | { result: Score; type: \"ADD_RESULT\" }\n  | { type: \"CHECK_TOOLBAR\" }\n  | { step: number; type: \"TRAVERSE_HISTORY\" }\n  | { type: \"UPDATE_HISTORY\" };\n\nconst initialGame = { rounds: [], score: { they: 0, us: 0 } };\nexport const initialState: State = {\n  canRedo: false,\n  canUndo: false,\n  game: initialGame,\n  history: [initialGame],\n  historyIndex: 0,\n  phase: \"bid\"\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_BID\":\n      return {\n        ...state,\n        game: {\n          ...state.game,\n          rounds: [...state.game.rounds, { bid: action.bid }]\n        },\n        phase: \"result\"\n      };\n    case \"ADD_RESULT\": {\n      return {\n        ...state,\n        game: {\n          rounds: [\n            ...dropRight(state.game.rounds),\n            { ...last(state.game.rounds), result: action.result }\n          ],\n          score: incrementScore(state.game.score, action.result)\n        },\n        phase: \"bid\"\n      };\n    }\n    case \"CHECK_TOOLBAR\":\n      return {\n        ...state,\n        canRedo: checkRedoPossibility(state.history, state.historyIndex),\n        canUndo: checkUndoPossibility(state.historyIndex)\n      };\n    case \"TRAVERSE_HISTORY\": {\n      const historyIndex = state.historyIndex + action.step;\n      return {\n        ...state,\n        game: state.history[historyIndex],\n        historyIndex,\n        phase: changePhase(state.phase)\n      };\n    }\n    case \"UPDATE_HISTORY\": {\n      const step = 1;\n      const historyIndex = state.historyIndex + step;\n      return {\n        ...state,\n        history: [\n          ...dropRight(state.history, state.history.length - historyIndex),\n          state.game\n        ],\n        historyIndex\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import { MAXIMUM_POINTS, MINIMUM_POINTS } from \"components/common/constants\";\nimport buttonStyles from \"./button/Button.module.css\";\nimport { range } from \"lodash\";\n\nconst DELAY = 200;\nconst MAGNITUDE = 1000;\nexport const TIMEOUT = parseFloat(buttonStyles.duration) * MAGNITUDE + DELAY;\n\nconst INCLUSIVE_END_OFFSET = 1;\nexport const NUMBERS = range(\n  MINIMUM_POINTS,\n  MAXIMUM_POINTS + INCLUSIVE_END_OFFSET\n);\n","import { Team } from \"components/common/types\";\n\ninterface State {\n  activeNumber: number | null;\n  activeTeam: Team | null;\n  disableButtons: boolean;\n}\n\ntype Action =\n  | { type: \"DISABLE_BUTTONS\" }\n  | { type: \"RESET\" }\n  | { number: number | null; type: \"SET_ACTIVE_NUMBER\" }\n  | { team: Team | null; type: \"SET_ACTIVE_TEAM\" };\n\nexport const initialState: State = {\n  activeNumber: null,\n  activeTeam: null,\n  disableButtons: false\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"DISABLE_BUTTONS\":\n      return { ...state, disableButtons: false };\n    case \"RESET\":\n      return initialState;\n    case \"SET_ACTIVE_NUMBER\":\n      return {\n        ...state,\n        activeNumber:\n          action.number === state.activeNumber ? null : action.number\n      };\n    case \"SET_ACTIVE_TEAM\":\n      return {\n        ...state,\n        activeTeam: action.team === state.activeTeam ? null : action.team\n      };\n    default:\n      throw new Error();\n  }\n};\n","import { Props, Value } from \"./types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.css\";\n\nexport const Button = <T extends Value>({\n  active,\n  activeColor,\n  disabled,\n  handleClick,\n  value\n}: Props<T>): JSX.Element => (\n  <button\n    className={classNames(styles.button, { [activeColor]: active })}\n    disabled={disabled}\n    onClick={(): void => handleClick(value)}\n  >\n    {value}\n  </button>\n);\n","import { NUMBERS, TIMEOUT } from \"./constants\";\nimport React, { FC, useReducer } from \"react\";\nimport { initialState, reducer } from \"./reducer\";\nimport { Button } from \"./button\";\nimport { Props } from \"./types\";\nimport { TEAMS } from \"components/common/constants\";\nimport { Team } from \"components/common/types\";\nimport buttonStyles from \"./button/Button.module.css\";\nimport styles from \"./Keypad.module.css\";\n\nexport const Keypad: FC<Props> = ({ updateRound }) => {\n  const [{ activeTeam, activeNumber, disableButtons }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const update = (points: number, team: Team): void => {\n    dispatch({ type: \"DISABLE_BUTTONS\" });\n\n    setTimeout(() => {\n      updateRound({ points, team });\n      dispatch({ type: \"RESET\" });\n    }, TIMEOUT);\n  };\n\n  const handleTeamClick = (team: Team): void => {\n    dispatch({ team, type: \"SET_ACTIVE_TEAM\" });\n    if (activeNumber) update(activeNumber, team);\n  };\n\n  const handleNumberClick = (number: number): void => {\n    dispatch({ number, type: \"SET_ACTIVE_NUMBER\" });\n    if (activeTeam) update(number, activeTeam);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.team}>\n        {TEAMS.map(team => (\n          <Button\n            active={team === activeTeam}\n            activeColor={buttonStyles.black}\n            disabled={disableButtons}\n            handleClick={handleTeamClick}\n            key={team}\n            value={team}\n          />\n        ))}\n      </div>\n\n      <div className={styles.number}>\n        {NUMBERS.map(number => (\n          <Button\n            active={number === activeNumber}\n            activeColor={buttonStyles.red}\n            disabled={disableButtons}\n            handleClick={handleNumberClick}\n            key={number}\n            value={number}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useRef } from \"react\";\nimport { Props } from \"./types\";\nimport { TEAMS } from \"components/common/constants\";\nimport classNames from \"classnames\";\nimport { last } from \"lodash\";\nimport styles from \"../Scoreboard.module.css\";\n\nexport const Body: FC<Props> = ({ rounds }) => {\n  const bodyColumnRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    const { current } = bodyColumnRef;\n    if (!current) return;\n\n    current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n  });\n\n  return (\n    <div className={styles.body}>\n      {TEAMS.map(team => (\n        <div className={styles.column} key={team} ref={bodyColumnRef}>\n          {rounds.map((round, index) => (\n            <div\n              className={classNames(styles.cell, {\n                [styles.reverse]: last(TEAMS) === team\n              })}\n              key={index}\n            >\n              {!round.result && round.bid && round.bid.team === team && (\n                <>\n                  <div className={styles.content}>{round.bid.points}</div>\n                  <span\n                    aria-label=\"Megaphone\"\n                    className={styles.emoji}\n                    role=\"img\"\n                  >\n                    📣\n                  </span>\n                </>\n              )}\n              {round.result && (\n                <div className={styles.content}>{round.result[team]}</div>\n              )}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Props } from \"./types\";\nimport { TEAMS } from \"components/common/constants\";\nimport styles from \"../Scoreboard.module.css\";\n\nexport const Foot: FC<Props> = ({ footCellRef, footRef, score }) => (\n  <div className={styles.foot} ref={footRef}>\n    {TEAMS.map(team => (\n      <div className={styles.column} key={team}>\n        <div className={styles.cell} ref={footCellRef}>\n          <div className={styles.content}>{score[team]}</div>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Props } from \"./types\";\nimport { TEAMS } from \"components/common/constants\";\nimport { Team } from \"components/common/types\";\nimport classNames from \"classnames\";\nimport { last } from \"lodash\";\nimport styles from \"../Scoreboard.module.css\";\n\nexport const Head: FC<Props> = ({ headRef, score }) => {\n  const [leader, setLeader] = useState<Team | null>(null);\n  useEffect(() => {\n    if (score.us > score.they) setLeader(\"us\");\n    else if (score.they > score.us) setLeader(\"they\");\n    else setLeader(null);\n  }, [score.us, score.they]);\n\n  return (\n    <div className={styles.head} ref={headRef}>\n      {TEAMS.map(team => (\n        <div className={styles.column} key={team}>\n          <div\n            className={classNames(styles.cell, {\n              [styles.reverse]: last(TEAMS) === team\n            })}\n          >\n            <div className={styles.content}>{team}</div>\n            {leader === team && (\n              <span\n                aria-label=\"Chequered Flag\"\n                className={styles.emoji}\n                role=\"img\"\n              >\n                🏁\n              </span>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { Body } from \"./body\";\nimport { Foot } from \"./foot\";\nimport { Head } from \"./head\";\nimport { Props } from \"./types\";\nimport styles from \"./Scoreboard.module.css\";\n\nexport const Scoreboard: FC<Props> = ({ game }) => {\n  const [minHeight, setMinHeight] = useState<number>();\n  const headRef = useRef<HTMLDivElement | null>(null);\n  const footRef = useRef<HTMLDivElement | null>(null);\n  const footCellRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    const { current: currentHeadRef } = headRef;\n    const { current: currentFootRef } = footRef;\n    const { current: currentFootCellRef } = footCellRef;\n    if (\n      currentHeadRef === null ||\n      currentFootRef === null ||\n      currentFootCellRef === null\n    )\n      return;\n\n    const newMinHeight =\n      currentHeadRef.offsetHeight +\n      currentFootRef.offsetHeight +\n      currentFootCellRef.offsetHeight;\n    setMinHeight(newMinHeight);\n  }, []);\n\n  return (\n    <div className={styles.table} style={{ minHeight }}>\n      <Head headRef={headRef} score={game.score} />\n      <Body rounds={game.rounds} />\n      <Foot footCellRef={footCellRef} footRef={footRef} score={game.score} />\n    </div>\n  );\n};\n","import { MdRedo, MdUndo } from \"react-icons/md\";\nimport React, { FC } from \"react\";\nimport { Props } from \"./types\";\nimport classNames from \"classnames\";\nimport styles from \"./Toolbar.module.css\";\n\nexport const Toolbar: FC<Props> = ({ canRedo, canUndo, redo, undo }) => (\n  <div className={styles.container}>\n    <span\n      className={classNames(styles.iconWrapper, {\n        [styles.disabled]: !canUndo\n      })}\n    >\n      <MdUndo onClick={undo} />\n    </span>\n\n    <span\n      className={classNames(styles.iconWrapper, {\n        [styles.disabled]: !canRedo\n      })}\n    >\n      <MdRedo onClick={redo} />\n    </span>\n  </div>\n);\n","import \"./index.css\";\nimport \"typeface-roboto\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { App } from \"components/app\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(<App />, rootElement);\n\nif (module.hot) {\n  module.hot.accept(\"components/app\", () => {\n    const NextApp = require(\"components/app\").default; // eslint-disable-line global-require\n    ReactDOM.render(<NextApp />, rootElement);\n  });\n}\n\n/*\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\nserviceWorker.unregister();\n","import { Bid, Winner } from \"components/common/types\";\nimport React, { useReducer } from \"react\";\nimport { initialState, reducer } from \"./reducer\";\nimport { Keypad } from \"components/keypad\";\nimport { Scoreboard } from \"components/scoreboard\";\nimport { Toolbar } from \"components/toolbar\";\nimport { determineResult } from \"./logic\";\nimport last from \"lodash.last\";\nimport styles from \"./App.module.css\";\n\nexport const App: React.FC = () => {\n  const [{ canRedo, canUndo, game, phase }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const addBid = (bid: Bid): void => {\n    dispatch({ bid, type: \"ADD_BID\" });\n    dispatch({ type: \"UPDATE_HISTORY\" });\n    dispatch({ type: \"CHECK_TOOLBAR\" });\n  };\n\n  const addResult = (winner: Winner): void => {\n    const lastRound = last(game.rounds);\n    if (!lastRound) return;\n    const { bid } = lastRound;\n    if (!bid) return;\n\n    const result = determineResult(bid, winner);\n    dispatch({ result, type: \"ADD_RESULT\" });\n    dispatch({ type: \"UPDATE_HISTORY\" });\n    dispatch({ type: \"CHECK_TOOLBAR\" });\n  };\n\n  const redo = (): void => {\n    const step = 1;\n    dispatch({ step, type: \"TRAVERSE_HISTORY\" });\n    dispatch({ type: \"CHECK_TOOLBAR\" });\n  };\n\n  const undo = (): void => {\n    const step = -1;\n    dispatch({ step, type: \"TRAVERSE_HISTORY\" });\n    dispatch({ type: \"CHECK_TOOLBAR\" });\n  };\n\n  return (\n    <div className={styles.felt}>\n      <div className={styles.grid}>\n        <Scoreboard game={game} />\n        <Toolbar canRedo={canRedo} canUndo={canUndo} redo={redo} undo={undo} />\n        <Keypad updateRound={phase === \"bid\" ? addBid : addResult} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}